#! /bin/bash
# mod: srv.sysv
# txt: The ``srv.sysv`` module contains specific functions to create and
#      configure services in systemv init environments.

# fun: srv::exists::sysv
# txt: implements srv::exists for sysv provider.
srv::exists::sysv () {
  std::mute /etc/init.d/"${1}" status
  [ $? -eq 0 ]
}

# fun: srv::present::sysv
# txt: implements srv::present for sysv provider.
srv::present::sysv () {
  if ! srv::exists::sysv "$1"; then
    srv::create::sysv "$1" &&
      out::info "created service: $1" && return 0 ||
      err::trace "Unable to create service: $1"
    return 1
  fi
  return 0
}

# fun: srv::absent::sysv
# txt: implements srv::absent for sysv provider.
srv::absent::sysv () {
  if srv::exists::sysv "$1"; then
    srv::destroy::sysv "$1" &&
      out::info "destroyed service: $1" && return 0 ||
      err::trace "Unable to destroy service: $1"
    return 1
  fi
  return 0
}

# fun: srv::create::sysv
# txt: implements srv::create for sysv provider.
srv::create::sysv () {
  std::mute ln -s "/etc/init.d/$1" "/etc/rc3.d/S20-$1" ||
    out::fail "unable to enable service: $1"
  std::mute "/etc/init.d/$1" start ||
    out::fail "unable to start service: $1"
}

# fun: srv::destroy::sysv
# txt: implements srv::destroy for sysv provider.
srv::destroy::sysv () {
  std::mute rm -f "/etc/rc3.d/S20-${1}" ||
    out::fail "unable to disable service: $1"
  std::mute "/etc/init.d/${1}" stop
    out::fail "unable to stop service: $1"
}
