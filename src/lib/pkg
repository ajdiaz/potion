#! /bin/bash
# mod: pkg
# api: potion
# txt: The `pkg` module provides functions to ensure package installation
#      on the system.
# use: pkg::present vim

# fun: pkg::exists [name=]<package>
# api: potion
# txt: return true if the specific package is present in the system.
pkg::exists () {
  local os name
  eval "$(std::parse "$@")"
  os="$(os::provider)"

  if std::func "pkg::_exists::${os}"; then
    "pkg::_exists::${os}" "$name"
    return $?
  else
    err::trace "Potion does not support '$os' operating system... yet"
  fi
}

# fun: pkg::present [name=]<package>
# api: potion
# txt: ensure that specified package is installed on the system.
pkg::present () {
  local os name
  eval "$(std::parse "$@")"
  os="$(os::provider)"

  if std::func "pkg::_present::${os}"; then
    "pkg::_present::${os}" "$name"
    return $?
  else
    err::trace "Potion does not support '$os' operating system... yet"
  fi
}

# fun: pkg::absent [name=]<package>
# api: potion
# txt: ensure that specified package is not present on the system.
pkg::absent () {
  local os
  eval "$(std::parse "$@")"
  os="$(os::provider)"

  if std::func "pkg::_absent::${os}"; then
    "pkg::_absent::${os}" "$name"
    return $?
  else
    err::trace "Potion does not support '$os' operating system... yet"
  fi
}
