#! /bin/bash
# mod: tz
# api: potion
# txt: The `tz` module provides functions to configure timezone in the
#      system.
# env: TZ_DIR: path where zoneinfo live. By default `/usr/share/zoneinfo`.
# use: tz::present Europe/Madrid

TZ_DIR="/usr/share/zoneinfo"

# fun: tz::exists [name=]<zonename>
# api: potion
# txt: if timezone especified in argument is set return true, otherwise
#      return false.
tz::exists () {
  local current decided name
  [ -r /etc/localtime ] || return 1

  eval "$(std::parse "$@")"
  current="$(file::_hmac file:///etc/localtime)"
  decided="$(file::_hmac "file:///usr/share/zoneinfo/$name")"

  [ "$current" == "$decided" ]  
}

# fun: tz::present [name=]<zonename>
# api: potion
# txt: ensure that specified timezone is set.
tz::present () {
  eval "$(std::parse "$@")"

  if ! tz::exists "$name"; then
    if std::mute std::run ln -sf "${TZ_DIR}/$name" /etc/localtime; then
      res::created tz "$name"
    else
      err::trace "Unable to create tz: $name"
    fi
  else
    return 1
  fi
}

# fun: tz::absent [name=]<zonename>
# api: potion
# txt: ensure that the specified timezone is not set.
tz::absent () {
  eval "$(std::parse "$@")"

  if tz::exists "$name"; then
    if std::mute std::run rm -f /etc/localtime; then
      res::deleted tz "$name"
    else
      err::trace "Unable to destroy tz: $name"
    fi
  else
    return 1
  fi
}
